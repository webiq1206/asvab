apiVersion: apps/v1
kind: Deployment
metadata:
  name: asvab-backend
  namespace: asvab-prep
  labels:
    app: asvab-backend
    version: v1
    branch: production
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: asvab-backend
  template:
    metadata:
      labels:
        app: asvab-backend
        version: v1
        branch: production
        component: api
    spec:
      serviceAccountName: asvab-backend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: asvab-backend
        image: asvabprep/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: asvab-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: asvab-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: asvab-secrets
              key: jwt-secret
        - name: JWT_REFRESH_SECRET
          valueFrom:
            secretKeyRef:
              name: asvab-secrets
              key: jwt-refresh-secret
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: asvab-secrets
              key: openai-api-key
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: asvab-secrets
              key: stripe-secret-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: uploads
          mountPath: /app/uploads
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: app-logs
        emptyDir: {}
      - name: uploads
        persistentVolumeClaim:
          claimName: asvab-uploads-pvc
      imagePullSecrets:
      - name: docker-registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: asvab-backend-service
  namespace: asvab-prep
  labels:
    app: asvab-backend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: asvab-backend

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: asvab-backend-ingress
  namespace: asvab-prep
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://asvabprep.com"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  tls:
  - hosts:
    - api.asvabprep.com
    secretName: asvab-tls-secret
  rules:
  - host: api.asvabprep.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: asvab-backend-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: asvab-backend-hpa
  namespace: asvab-prep
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: asvab-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: asvab-backend-pdb
  namespace: asvab-prep
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: asvab-backend

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: asvab-backend-sa
  namespace: asvab-prep
automountServiceAccountToken: false