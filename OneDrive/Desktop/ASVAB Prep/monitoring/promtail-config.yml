# ASVAB Prep Promtail Configuration
# Military-grade log collection and shipping

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /promtail/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # ASVAB Backend Application Logs
  - job_name: asvab-backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: asvab-backend
          service: backend
          environment: production
          __path__: /var/log/asvab-backend/*.log
    pipeline_stages:
      # Parse JSON logs
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
            userId: userId
            requestId: requestId
            branch: branch
      # Set timestamp
      - timestamp:
          source: timestamp
          format: RFC3339
      # Add military-specific labels
      - labels:
          level:
          service:
          branch:
      # Filter sensitive information
      - replace:
          expression: '(password|token|secret|key)=[^\\s]+'
          replace: '$1=***REDACTED***'

  # Nginx Access Logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          service: loadbalancer
          log_type: access
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      # Parse Nginx log format
      - regex:
          expression: '^(?P<remote_addr>[\w\.]+) - (?P<remote_user>[^ ]*) \[(?P<time_local>[^\]]*)\] "(?P<method>[A-Z]+) (?P<request_uri>[^ ]*) (?P<protocol>[^"]*)" (?P<status>\d+) (?P<bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
      # Convert to structured format
      - template:
          source: output
          template: '{"method":"{{ .method }}","uri":"{{ .request_uri }}","status":{{ .status }},"bytes":{{ .bytes_sent }},"user_agent":"{{ .http_user_agent }}","remote_addr":"{{ .remote_addr }}"}'
      - output:
          source: output
      # Add labels
      - labels:
          method:
          status:
      # Rate limit high-frequency endpoints
      - drop:
          source: request_uri
          expression: '/(health|metrics|favicon\.ico)'

  # Nginx Error Logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          service: loadbalancer
          log_type: error
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<pid>\d+)#(?P<tid>\d+): (?P<message>.*)'
      - labels:
          level:
      - timestamp:
          source: timestamp
          format: '2006/01/02 15:04:05'

  # PostgreSQL Logs
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          service: database
          __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<pid>\d+)\] (?P<level>\w+): (?P<message>.*)'
      - labels:
          level:
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000 MST'
      # Redact sensitive SQL queries
      - replace:
          expression: "(password|token)\\s*=\\s*'[^']+'"
          replace: "$1='***REDACTED***'"

  # Redis Logs
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          service: cache
          __path__: /var/log/redis/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<pid>\d+):(?P<role>\w+) (?P<timestamp>\d{2} \w{3} \d{4} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<level>\w+) (?P<message>.*)'
      - labels:
          level:
          role:
      - timestamp:
          source: timestamp
          format: '02 Jan 2006 15:04:05.000'

  # Docker Container Logs
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: [__meta_docker_container_name]
        regex: '/asvab-(.*)'
        target_label: container_name
        replacement: '$1'
      - source_labels: [__meta_docker_container_label_com_docker_compose_service]
        target_label: service
    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            message: log
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: message

  # System Logs (Syslog)
  - job_name: syslog
    syslog:
      listen_address: 0.0.0.0:1514
      listen_protocol: udp
      label_structured_data: true
      labels:
        job: syslog
        service: system
    relabel_configs:
      - source_labels: [__syslog_message_severity]
        target_label: level
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3} \d{2} \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<process>\w+)(?:\[(?P<pid>\d+)\])?: (?P<message>.*)'
      - labels:
          hostname:
          process:
      - timestamp:
          source: timestamp
          format: 'Jan 02 15:04:05'

  # Custom ASVAB Metrics Logs
  - job_name: asvab-metrics
    static_configs:
      - targets:
          - localhost
        labels:
          job: asvab-metrics
          service: metrics
          __path__: /var/log/asvab-metrics/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            metric_name: metric
            value: value
            branch: branch
            user_id: userId
            category: category
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          metric_name:
          branch:
          category:

  # Security Logs
  - job_name: security-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: security
          service: security
          __path__: /var/log/security/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            event_type: event
            severity: severity
            source_ip: sourceIp
            user_id: userId
            message: message
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          event_type:
          severity:
      # Mask IP addresses for privacy
      - replace:
          expression: '(\d+\.\d+\.\d+\.)\d+'
          replace: '${1}xxx'

  # Alert Logs
  - job_name: alertmanager
    static_configs:
      - targets:
          - localhost
        labels:
          job: alertmanager
          service: alerting
          __path__: /var/log/alertmanager/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: ts
            level: level
            message: msg
            component: component
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          component: