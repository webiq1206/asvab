# ASVAB Prep Prometheus Configuration
# Military-grade monitoring for production excellence

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'asvab-prep-monitor'
    environment: 'production'
    service: 'military-education'

# Alerting rules
rule_files:
  - "alert_rules.yml"
  - "military_alerts.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # ASVAB Backend API monitoring
  - job_name: 'asvab-backend'
    static_configs:
      - targets: ['backend:3001']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    scheme: http
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: backend:3001
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'nodejs_.*|process_.*|http_.*|asvab_.*'
        action: keep

  # Database monitoring
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'asvab-postgres'

  # Redis monitoring
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'asvab-redis'

  # Nginx monitoring
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 15s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'asvab-nginx'

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'asvab-host'

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'asvab-containers'

  # Custom ASVAB metrics
  - job_name: 'asvab-custom-metrics'
    static_configs:
      - targets: ['backend:3001']
    metrics_path: '/api/metrics/custom'
    scrape_interval: 60s
    scrape_timeout: 15s
    params:
      service: ['asvab-prep']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'asvab_users_.*|asvab_quizzes_.*|asvab_military_.*|asvab_subscription_.*'
        action: keep
      - source_labels: [military_branch]
        regex: '(ARMY|NAVY|AIR_FORCE|MARINES|COAST_GUARD|SPACE_FORCE)'
        action: keep

  # WebSocket metrics
  - job_name: 'asvab-websocket'
    static_configs:
      - targets: ['backend:3001']
    metrics_path: '/api/metrics/websocket'
    scrape_interval: 30s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'asvab_ws_.*|socket_io_.*'
        action: keep

# Remote write configuration for long-term storage
# remote_write:
#   - url: "https://prometheus-remote-write.example.com/api/v1/write"
#     headers:
#       Authorization: "Bearer YOUR_TOKEN"
#     queue_config:
#       capacity: 10000
#       max_shards: 200
#       min_shards: 1
#       max_samples_per_send: 1000
#       batch_send_deadline: 5s
#       min_backoff: 30ms
#       max_backoff: 100ms

# Recording rules for efficient queries
recording_rules:
  - name: asvab_military_metrics
    interval: 30s
    rules:
      # User metrics by military branch
      - record: asvab:users_by_branch
        expr: sum(asvab_users_total) by (military_branch)
      
      # Quiz success rate by branch
      - record: asvab:quiz_success_rate_by_branch
        expr: sum(rate(asvab_quizzes_passed_total[5m])) by (military_branch) / sum(rate(asvab_quizzes_total[5m])) by (military_branch)
      
      # Average ASVAB scores by category
      - record: asvab:avg_score_by_category
        expr: avg(asvab_quiz_score) by (category)
      
      # Subscription conversion rate
      - record: asvab:subscription_conversion_rate
        expr: sum(rate(asvab_subscriptions_premium_total[1h])) / sum(rate(asvab_users_registered_total[1h]))

  - name: asvab_performance_metrics
    interval: 15s
    rules:
      # API response time 95th percentile
      - record: asvab:api_response_time_p95
        expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le, method, route))
      
      # Database connection pool usage
      - record: asvab:db_pool_usage_ratio
        expr: asvab_db_connections_active / asvab_db_connections_max
      
      # Memory usage percentage
      - record: asvab:memory_usage_ratio
        expr: (container_memory_usage_bytes{name="asvab-backend"} / container_spec_memory_limit_bytes{name="asvab-backend"}) * 100
      
      # CPU usage percentage
      - record: asvab:cpu_usage_ratio
        expr: rate(container_cpu_usage_seconds_total{name="asvab-backend"}[5m]) * 100

  - name: asvab_business_metrics
    interval: 60s
    rules:
      # Daily active users
      - record: asvab:daily_active_users
        expr: sum(increase(asvab_user_sessions_total[24h]))
      
      # Premium subscriber growth
      - record: asvab:premium_growth_rate
        expr: (sum(asvab_subscriptions_premium_total) - sum(asvab_subscriptions_premium_total offset 24h)) / sum(asvab_subscriptions_premium_total offset 24h) * 100
      
      # Quiz completion rate by difficulty
      - record: asvab:quiz_completion_rate_by_difficulty
        expr: sum(rate(asvab_quizzes_completed_total[1h])) by (difficulty) / sum(rate(asvab_quizzes_started_total[1h])) by (difficulty)
      
      # Revenue per military branch (if tracking revenue)
      - record: asvab:revenue_by_branch
        expr: sum(asvab_revenue_total) by (military_branch)